div.footer-style
  <vue-footer></vue-footer>

if localEnv.environment == 'production' 
  script(src="/tmp/assets/production.js")

else 
  each item in development.assets.vendor.javascripts
    script(src="/assets/javascripts/#{item}.js")

  script(src="/tmp/assets/javascripts/common.js")

//- 百度地图API
script(src="http://api.map.baidu.com/api?v=2.0&ak=n0dzf54cjjE9TfBiijtOG5z7&services=&t=20160401164342")


//- 错误日志记录
script.
  window.onerror = function (msg,url,line,col,error) {
    var errorData = {
      'error_type': '前端错误日志',
      '浏览器': detector.browser.name + ' ' + detector.browser.fullVersion,
      '系统': detector.os.name + ' ' + detector.os.fullVersion,
      '错误文件': url,
      '错误位置': line + '行，' 
    }
    setTimeout(function(){

        //不一定所有浏览器都支持col参数
        col = col || (window.event && window.event.errorCharacter) || 0;

        errorData['错误位置'] = line + ' 行，' + col + ' 列'
        if (!!error && !!error.stack){
            //如果浏览器有堆栈信息
            //直接使用
            errorData['堆栈信息'] = error.stack.toString();
        }else if (!!arguments.callee){
            //尝试通过callee拿堆栈信息
            var ext = [];
            var f = arguments.callee.caller, c = 3;
            //这里只拿三层堆栈信息
            while (f && (--c>0)) {
               ext.push(f.toString());
               if (f  === f.caller) {
                    break;//如果有环
               }
               f = f.caller;
            }
            ext = ext.join(",");
           errorData['堆栈信息'] = ext; 
        }

        //把data上报到后台！
        console.log(errorData)
        API.post('functions/leancloudlog/send_log', errorData, function () {
          console.log('错误日志上报成功')
        })
    }, 0);

    
  }


script(src="/tmp/assets/javascripts/controller/#{route.controller}/#{route.action}.js")
script.
  SITE.Init().then(function() {
    if(typeof APP.#{route.controller}.#{route.action} == 'function'){
      new APP.#{route.controller}.#{route.action}()
    }
  })
